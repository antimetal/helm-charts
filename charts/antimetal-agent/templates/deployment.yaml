apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "antimetal-agent.fullname" . }}
  labels:
    {{- include "antimetal-agent.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "antimetal-agent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "antimetal-agent.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "antimetal-agent.serviceAccountName" . }}
      terminationGracePeriodSeconds: 10
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: agent
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /agent
          args:
            - --leader-elect
            {{- with .Values.logLevel }}
            - --zap-log-level={{ . }}
            {{- end }}
            {{- with .Values.apiAddress }}
            - --intake-address={{ . }}
            {{- end }}
            - --intake-api-key=$(API_KEY)
            - --kubernetes-provider={{ required "Must set provider.name" .Values.provider.name }}
            {{- $providerData := get .Values.provider .Values.provider.name }}
            {{- range  $key, $value := $providerData }}
            - --kubernetes-provider-{{ $.Values.provider.name }}-{{ $key }}={{ $value }}
            {{- end }}
            {{- if .Values.metrics.enable }}
            - --metrics-bind-address={{ include "antimetal-agent.metricsServerPort" . | printf ":%s" }}
            - --metrics-secure={{ default false .Values.metrics.secure }}
            {{- if and .Values.metrics.secure .Values.metrics.tls }}
            - --metrics-cert-dir=/etc/antimetal-agent/tls
            - --metrics-cert-name=tls.crt
            - --metrics-key-name=tls.key
            {{- end }}
            {{- else }}
            - --metrics-bind-address=0
            {{- end }}
            {{- if .Values.pprof.enable }}
            - --pprof-address={{ printf ":%s" .Values.pprof.port }}
            {{- end }}
          env:
            - name: KUBERNETES_NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: KUBERNETES_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            {{- with .Values.extraEnvs }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          envFrom:
            - secretRef:
                name: {{ include "antimetal-agent.apiKeySecretName" . }}
            {{- with .Values.extraEnvsFrom }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            - name: health
              containerPort: 8081
            {{- if .Values.metrics.enable }}
            - name: metrics
              containerPort: {{ include "antimetal-agent.metricsServerPort" . | int }}
            {{- end }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if or (and .Values.metrics.enable .Values.metrics.secure .Values.metrics.tls) .Values.extraVolumes }}
          volumeMounts:
            {{- with .Values.metrics.tls }}
            - name: metrics-tls
              mountPath: /etc/antimetal-agent/tls
              readOnly: true
            {{- end }}
            {{- with .Values.extraVolumeMounts }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- end }}
      {{- if or (and .Values.metrics.enable .Values.metrics.secure .Values.metrics.tls) .Values.extraVolumes }}
      volumes:
        {{- with .Values.metrics.tls }}
        - name: metrics-tls
          secret:
            secretName: {{ required "tls.secretRef must be set" .secretRef }}
        {{- end }}
        {{- with .Values.extraVolumes }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
